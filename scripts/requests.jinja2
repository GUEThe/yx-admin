/**
 * {{doc.info.title}}
 * {{doc.info.description}}
 *
 * version {{doc.info.version}}
 *
 *
 * NOTE: This class is auto generated by the code generator.
 * Do not edit the class manually.
 */
import * as m from "./models";
import { encodeQuery } from "@/utils";
import { Log } from "@/logbox";
import { apiSendAsync ,ApiRequestOptions} from '@/utils/apiRequest';

const defaultPageSize=20;

  const protocol = "https"
  export const apiHost = process.env.VUE_APP_API_HOST;
  const basePath = "{{doc.basePath}}"
  export const baseUrl = `${protocol}://${apiHost}`
  export const wssBaseUrl = `wss://${apiHost}${basePath}/ws`


{% for group in groups %}
  {% for req in group.reqs %}
    {% set resp = req.resp %}
    /*
    {% if not resp.isCommon %}
    export interface {{resp.name}} extends m.RestfulData{
      data?: {{resp.dataType}};
      {% if resp.isArray %}
      total: number;
      page: number;
      pageSize: number;
      {% endif %}
    }
    {% endif %}
*/

    /**
      * {{ req.summary }}
      {% for param in req.params %}
      * @param {{param.name}} {{param.tsType}} {{param.type}} {{param.description}}
      {% endfor %}
      */
    export function {{req.funName}} (
      {% if req.params.length > 0 %}
      options:{
      {% for param in req.params %}
        {% if param.required %}
          {{param.name}}:{{param.tsType}},
        {% else %}
          {{param.name}}?:{{param.tsType}},
        {% endif %}
      {% endfor %}
    }
    {% endif %}
    ): Promise<{{resp.name | safe}}>{
    const opts:ApiRequestOptions={url:`{{req.pathTpl}}`,
        method: "{{req.method}}",
        reqName: "{{req.funName}}"};

      {% for param in req.params %}
        {% if param.name == 'page' %}
        options.pageSize = options.pageSize || defaultPageSize
        {% endif %}
      {% endfor %}

      {% if req.queryParams.length %}
        opts.params= {
        {% for param in req.queryParams %}
          {{param.name}}:   options.{{param.name}},
        {% endfor %}
        }

      {% endif %}

      {% if req.bodyParams.length %}
        {% if req.bodyParams.length == 1 %}
          opts.data = options.{{req.bodyParams[0].name}}
        {% else %}
        opts.data = {
          {% for param in req.bodyParams %}
            {{param.name}}: options.{{param.name}}
          {% endfor %}
        }
        {% endif %}
      {% endif %}
      return apiSendAsync<{{resp.name | safe}}>(opts);

    }
  {% endfor %}
{% endfor %}
