/**
 * yxAPI
 *
 *
 * version v1
 *
 *
 * NOTE: This class is auto generated by the code generator.
 * Do not edit the class manually.
 */
import * as m from "./models";
import { encodeQuery } from "@/utils";
import { Log } from "@/logbox";
import { apiSendAsync, ApiRequestOptions } from "@/utils/apiRequest";

const protocol = "https";
export const apiHost = process.env.VUE_APP_API_HOST;
const basePath = "";
export const baseUrl = `${protocol}://${apiHost}`;
export const wssBaseUrl = `wss://${apiHost}${basePath}/ws`;

/*
    export interface m.DataResponse&lt;m.TokenObj&gt; extends m.RestfulData{
      data?: m.TokenObj;
    }
*/

/**
 * 登陆获取token测试
 * @param signinForm m.SigninForm
 */
export function Sigin(options: {
  signinForm: m.SigninForm;
}): Promise<m.DataResponse<m.TokenObj>> {
  const opts: ApiRequestOptions = {
    url: `/api/Auth`,
    method: "post",
    reqName: "Sigin"
  };

  opts.data = options.signinForm;
  return apiSendAsync<m.DataResponse<m.TokenObj>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 退出登录
 */
export function Logout(): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Auth/logout`,
    method: "post",
    reqName: "Logout"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.UserInfo&gt; extends m.RestfulData{
      data?: m.UserInfo;
    }
*/

/**
 * 获取用户信息
 */
export function GetUserInfo(): Promise<m.DataResponse<m.UserInfo>> {
  const opts: ApiRequestOptions = {
    url: `/api/Auth/user`,
    method: "get",
    reqName: "GetUserInfo"
  };

  return apiSendAsync<m.DataResponse<m.UserInfo>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Bed[]&gt; extends m.RestfulData{
      data?: m.Bed[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取床位列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetBedList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.Bed[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed`,
    method: "get",
    reqName: "GetBedList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.Bed[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改床位项
 * @param id number integer
 * @param model m.Bed
 */
export function PutBed(options: {
  id?: number;
  model?: m.Bed;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed`,
    method: "put",
    reqName: "PutBed"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增床位项
 * @param model m.Bed
 */
export function PostBed(options: {
  model?: m.Bed;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed`,
    method: "post",
    reqName: "PostBed"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Bed&gt; extends m.RestfulData{
      data?: m.Bed;
    }
*/

/**
 * 获取床位
 * @param id number integer
 */
export function GetBedItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Bed>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed/${options.id}`,
    method: "get",
    reqName: "GetBedItem"
  };

  return apiSendAsync<m.DataResponse<m.Bed>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除床位项
 * @param id number integer
 */
export function DeleteBed(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed/${options.id}`,
    method: "delete",
    reqName: "DeleteBed"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.StudentBedView&gt; extends m.RestfulData{
      data?: m.StudentBedView;
    }
*/

/**
 * 获取新生床位安排
 * @param studentId string string
 */
export function GetStudentBed(options: {
  studentId: string;
}): Promise<m.DataResponse<m.StudentBedView>> {
  const opts: ApiRequestOptions = {
    url: `/api/Bed/studentbed/${options.studentId}`,
    method: "get",
    reqName: "GetStudentBed"
  };

  return apiSendAsync<m.DataResponse<m.StudentBedView>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Campus[]&gt; extends m.RestfulData{
      data?: m.Campus[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取校区列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetCampusList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.Campus[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Campus`,
    method: "get",
    reqName: "GetCampusList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.Campus[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改校区项
 * @param id number integer
 * @param model m.Campus
 */
export function PutCampus(options: {
  id?: number;
  model?: m.Campus;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Campus`,
    method: "put",
    reqName: "PutCampus"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增校区项
 * @param model m.Campus
 */
export function PostCampus(options: {
  model?: m.Campus;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Campus`,
    method: "post",
    reqName: "PostCampus"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Campus&gt; extends m.RestfulData{
      data?: m.Campus;
    }
*/

/**
 * 获取校区
 * @param id number integer
 */
export function GetCampusItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Campus>> {
  const opts: ApiRequestOptions = {
    url: `/api/Campus/${options.id}`,
    method: "get",
    reqName: "GetCampusItem"
  };

  return apiSendAsync<m.DataResponse<m.Campus>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除校区项
 * @param id number integer
 */
export function DeleteCampus(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Campus/${options.id}`,
    method: "delete",
    reqName: "DeleteCampus"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.College[]&gt; extends m.RestfulData{
      data?: m.College[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学院列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetCollegeList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.College[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/College`,
    method: "get",
    reqName: "GetCollegeList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.College[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改学院项
 * @param id number integer
 * @param model m.College
 */
export function PutCollege(options: {
  id?: number;
  model?: m.College;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/College`,
    method: "put",
    reqName: "PutCollege"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增学院项
 * @param model m.College
 */
export function PostCollege(options: {
  model?: m.College;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/College`,
    method: "post",
    reqName: "PostCollege"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.College&gt; extends m.RestfulData{
      data?: m.College;
    }
*/

/**
 * 获取学院
 * @param id number integer
 */
export function GetCollegeItem(options: {
  id: number;
}): Promise<m.DataResponse<m.College>> {
  const opts: ApiRequestOptions = {
    url: `/api/College/${options.id}`,
    method: "get",
    reqName: "GetCollegeItem"
  };

  return apiSendAsync<m.DataResponse<m.College>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除学院项
 * @param id number integer
 */
export function DeleteCollege(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/College/${options.id}`,
    method: "delete",
    reqName: "DeleteCollege"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Fee[]&gt; extends m.RestfulData{
      data?: m.Fee[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取费用列表
 * @param page number integer
 * @param pageSize number integer
 * @param keyword string string
 */
export function GetFeeList(options: {
  page?: number;
  pageSize?: number;
  keyword?: string;
}): Promise<m.PageResponse<m.Fee[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee`,
    method: "get",
    reqName: "GetFeeList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    keyword: options.keyword
  };

  return apiSendAsync<m.PageResponse<m.Fee[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改费用项
 * @param id number integer
 * @param model m.Fee
 */
export function PutFee(options: {
  id?: number;
  model?: m.Fee;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee`,
    method: "put",
    reqName: "PutFee"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增某类型费用项
 * @param model m.Fee
 */
export function PostFee(options: {
  model?: m.Fee;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee`,
    method: "post",
    reqName: "PostFee"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Fee[]&gt; extends m.RestfulData{
      data?: m.Fee[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 根据学生类型获取费用列表
 * @param studentType string string 学生类型（本科生，研究生，在信息类别里定义）
 */
export function GetStudentFeeList(options: {
  studentType?: string;
}): Promise<m.PageResponse<m.Fee[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee/student`,
    method: "get",
    reqName: "GetStudentFeeList"
  };

  opts.params = {
    studentType: options.studentType
  };

  return apiSendAsync<m.PageResponse<m.Fee[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Fee&gt; extends m.RestfulData{
      data?: m.Fee;
    }
*/

/**
 * 获取某类型费用列表
 * @param id number integer
 */
export function GetFeeItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Fee>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee/${options.id}`,
    method: "get",
    reqName: "GetFeeItem"
  };

  return apiSendAsync<m.DataResponse<m.Fee>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除费用项
 * @param id number integer
 */
export function DeleteFee(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Fee/${options.id}`,
    method: "delete",
    reqName: "DeleteFee"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 下载文件
 * @param fileKey number integer
 */
export function GetFile(options: {
  fileKey: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/File/${options.fileKey}`,
    method: "get",
    reqName: "GetFile"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.GreenChannel[]&gt; extends m.RestfulData{
      data?: m.GreenChannel[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取绿色通道列表
 * @param page number integer
 * @param pageSize number integer
 * @param status number integer
 * @param studentId string string
 */
export function GetGreenChannelList(options: {
  page?: number;
  pageSize?: number;
  status?: number;
  studentId?: string;
}): Promise<m.PageResponse<m.GreenChannel[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel`,
    method: "get",
    reqName: "GetGreenChannelList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    status: options.status,
    studentId: options.studentId
  };

  return apiSendAsync<m.PageResponse<m.GreenChannel[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改绿色通道项
 * @param id number integer
 * @param model m.GreenChannel
 */
export function PutGreenChannel(options: {
  id?: number;
  model?: m.GreenChannel;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel`,
    method: "put",
    reqName: "PutGreenChannel"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增(保存)绿色通道项
 * @param model m.GreenChannel
 */
export function PostGreenChannel(options: {
  model?: m.GreenChannel;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel`,
    method: "post",
    reqName: "PostGreenChannel"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.GreenChannel&gt; extends m.RestfulData{
      data?: m.GreenChannel;
    }
*/

/**
 * 获取绿色通道列表
 * @param id number integer
 */
export function GetGreenChannelItem(options: {
  id: number;
}): Promise<m.DataResponse<m.GreenChannel>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel/${options.id}`,
    method: "get",
    reqName: "GetGreenChannelItem"
  };

  return apiSendAsync<m.DataResponse<m.GreenChannel>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除绿色通道项
 * @param id number integer
 */
export function DeleteGreenChannel(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel/${options.id}`,
    method: "delete",
    reqName: "DeleteGreenChannel"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.GreenChannel&gt; extends m.RestfulData{
      data?: m.GreenChannel;
    }
*/

/**
 * 根据学生ID获取绿色通道记录
 * @param studentId number integer
 */
export function GetGreenChannelByStudentId(options: {
  studentId?: number;
}): Promise<m.DataResponse<m.GreenChannel>> {
  const opts: ApiRequestOptions = {
    url: `/api/GreenChannel/student`,
    method: "get",
    reqName: "GetGreenChannelByStudentId"
  };

  opts.params = {
    studentId: options.studentId
  };

  return apiSendAsync<m.DataResponse<m.GreenChannel>>(opts);
}
/*
    export interface m.PageResponse&lt;m.InfoCategory[]&gt; extends m.RestfulData{
      data?: m.InfoCategory[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取信息类别列表
 * @param page number integer
 * @param pageSize number integer
 * @param keyword string string
 */
export function GetInfoCategoryList(options: {
  page?: number;
  pageSize?: number;
  keyword?: string;
}): Promise<m.PageResponse<m.InfoCategory[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory`,
    method: "get",
    reqName: "GetInfoCategoryList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    keyword: options.keyword
  };

  return apiSendAsync<m.PageResponse<m.InfoCategory[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改信息类别项
 * @param id number integer
 * @param model m.InfoCategory
 */
export function PutInfoCategory(options: {
  id?: number;
  model?: m.InfoCategory;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory`,
    method: "put",
    reqName: "PutInfoCategory"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增某类型信息类别项
 * @param model m.InfoCategory
 */
export function PostInfoCategory(options: {
  model?: m.InfoCategory;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory`,
    method: "post",
    reqName: "PostInfoCategory"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.InfoCategory&gt; extends m.RestfulData{
      data?: m.InfoCategory;
    }
*/

/**
 * 获取某类型信息类别列表
 * @param type string string
 */
export function GetInfoCategoryByType(options: {
  type?: string;
}): Promise<m.DataResponse<m.InfoCategory>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory/items`,
    method: "get",
    reqName: "GetInfoCategoryByType"
  };

  opts.params = {
    type: options.type
  };

  return apiSendAsync<m.DataResponse<m.InfoCategory>>(opts);
}
/*
    export interface m.DataResponse&lt;m.InfoCategory&gt; extends m.RestfulData{
      data?: m.InfoCategory;
    }
*/

/**
 * 获取信息类别
 * @param id number integer
 */
export function GetInfoCategoryItem(options: {
  id: number;
}): Promise<m.DataResponse<m.InfoCategory>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory/${options.id}`,
    method: "get",
    reqName: "GetInfoCategoryItem"
  };

  return apiSendAsync<m.DataResponse<m.InfoCategory>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除信息类别项
 * @param id number integer
 */
export function DeleteInfoCategory(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/InfoCategory/${options.id}`,
    method: "delete",
    reqName: "DeleteInfoCategory"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Leave[]&gt; extends m.RestfulData{
      data?: m.Leave[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取请假列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetLeaveList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.Leave[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Leave`,
    method: "get",
    reqName: "GetLeaveList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.Leave[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改请假项
 * @param id number integer
 * @param model m.Leave
 */
export function PutLeave(options: {
  id?: number;
  model?: m.Leave;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Leave`,
    method: "put",
    reqName: "PutLeave"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增(保存)请假项
 * @param model m.Leave
 */
export function PostLeave(options: {
  model?: m.Leave;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Leave`,
    method: "post",
    reqName: "PostLeave"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Leave&gt; extends m.RestfulData{
      data?: m.Leave;
    }
*/

/**
 * 获取请假
 * @param id number integer
 */
export function GetLeaveItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Leave>> {
  const opts: ApiRequestOptions = {
    url: `/api/Leave/${options.id}`,
    method: "get",
    reqName: "GetLeaveItem"
  };

  return apiSendAsync<m.DataResponse<m.Leave>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除请假项
 * @param id number integer
 */
export function DeleteLeave(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Leave/${options.id}`,
    method: "delete",
    reqName: "DeleteLeave"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Major[]&gt; extends m.RestfulData{
      data?: m.Major[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取专业列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetMajorList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.Major[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Major`,
    method: "get",
    reqName: "GetMajorList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.Major[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改专业项
 * @param id number integer
 * @param model m.Major
 */
export function PutMajor(options: {
  id?: number;
  model?: m.Major;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Major`,
    method: "put",
    reqName: "PutMajor"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增专业项
 * @param model m.Major
 */
export function PostMajor(options: {
  model?: m.Major;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Major`,
    method: "post",
    reqName: "PostMajor"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Major&gt; extends m.RestfulData{
      data?: m.Major;
    }
*/

/**
 * 获取专业
 * @param id number integer
 */
export function GetMajorItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Major>> {
  const opts: ApiRequestOptions = {
    url: `/api/Major/${options.id}`,
    method: "get",
    reqName: "GetMajorItem"
  };

  return apiSendAsync<m.DataResponse<m.Major>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除专业项
 * @param id number integer
 */
export function DeleteMajor(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Major/${options.id}`,
    method: "delete",
    reqName: "DeleteMajor"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.News[]&gt; extends m.RestfulData{
      data?: m.News[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取新闻列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetNewsList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.News[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/News`,
    method: "get",
    reqName: "GetNewsList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.News[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改新闻项
 * @param id number integer
 * @param model m.News
 */
export function PutNews(options: {
  id?: number;
  model?: m.News;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/News`,
    method: "put",
    reqName: "PutNews"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增新闻项
 * @param model m.News
 */
export function PostNews(options: {
  model?: m.News;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/News`,
    method: "post",
    reqName: "PostNews"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.News&gt; extends m.RestfulData{
      data?: m.News;
    }
*/

/**
 * 获取新闻
 * @param id number integer
 */
export function GetNewsItem(options: {
  id: number;
}): Promise<m.DataResponse<m.News>> {
  const opts: ApiRequestOptions = {
    url: `/api/News/${options.id}`,
    method: "get",
    reqName: "GetNewsItem"
  };

  return apiSendAsync<m.DataResponse<m.News>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除新闻项
 * @param id number integer
 */
export function DeleteNews(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/News/${options.id}`,
    method: "delete",
    reqName: "DeleteNews"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Payment[]&gt; extends m.RestfulData{
      data?: m.Payment[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取缴费列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetPaymentList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.Payment[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Payment`,
    method: "get",
    reqName: "GetPaymentList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.Payment[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改缴费项
 * @param id number integer
 * @param model m.Payment
 */
export function PutPayment(options: {
  id?: number;
  model?: m.Payment;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Payment`,
    method: "put",
    reqName: "PutPayment"
  };

  opts.params = {
    id: options.id
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新增某类型缴费项
 * @param model m.Payment
 */
export function PostPayment(options: {
  model?: m.Payment;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Payment`,
    method: "post",
    reqName: "PostPayment"
  };

  opts.data = options.model;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Payment&gt; extends m.RestfulData{
      data?: m.Payment;
    }
*/

/**
 * 获取某类型缴费列表
 * @param id number integer
 */
export function GetPaymentItem(options: {
  id: number;
}): Promise<m.DataResponse<m.Payment>> {
  const opts: ApiRequestOptions = {
    url: `/api/Payment/${options.id}`,
    method: "get",
    reqName: "GetPaymentItem"
  };

  return apiSendAsync<m.DataResponse<m.Payment>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除缴费项
 * @param id number integer
 */
export function DeletePayment(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Payment/${options.id}`,
    method: "delete",
    reqName: "DeletePayment"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 *
 */
export function GetStuatus(): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Status`,
    method: "get",
    reqName: "GetStuatus"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Student[]&gt; extends m.RestfulData{
      data?: m.Student[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学生信息列表(role为admin获取全部，college获取本学院)
 * @param page number integer 当前页
 * @param pageSize number integer 页大小
 * @param collegeCode string string 学院代码(可选,role为college时无效)
 * @param majorCode string string 专业代码（可选，优先级高于学院代码，有collegeCode不起作用)
 * @param studentId string string 学号
 * @param year number integer 年份，默认当年
 */
export function GetStudentList(options: {
  page?: number;
  pageSize?: number;
  collegeCode?: string;
  majorCode?: string;
  studentId?: string;
  year?: number;
}): Promise<m.PageResponse<m.Student[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student`,
    method: "get",
    reqName: "GetStudentList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    collegeCode: options.collegeCode,
    majorCode: options.majorCode,
    studentId: options.studentId,
    year: options.year
  };

  return apiSendAsync<m.PageResponse<m.Student[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 更新学生信息
 * @param value m.Student  学生对象
 */
export function PutStudent(options: {
  value?: m.Student;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student`,
    method: "put",
    reqName: "PutStudent"
  };

  opts.data = options.value;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Student&gt; extends m.RestfulData{
      data?: m.Student;
    }
*/

/**
 * 新增单个学生
 * @param student m.Student
 */
export function PostStudent(options: {
  student?: m.Student;
}): Promise<m.DataResponse<m.Student>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student`,
    method: "post",
    reqName: "PostStudent"
  };

  opts.data = options.student;
  return apiSendAsync<m.DataResponse<m.Student>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Student[]&gt; extends m.RestfulData{
      data?: m.Student[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取已上传照片的所有新生
 * @param page number integer 当前页
 * @param pageSize number integer 页大小
 * @param status number integer 状态(可选，不传或者传null.全部，0.待审核，1审核通过，2审核不通过)
 * @param year number integer 年份（可选，默认当年）
 */
export function GetStudentImgList(options: {
  page?: number;
  pageSize?: number;
  status?: number;
  year?: number;
}): Promise<m.PageResponse<m.Student[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/img`,
    method: "get",
    reqName: "GetStudentImgList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    status: options.status,
    year: options.year
  };

  return apiSendAsync<m.PageResponse<m.Student[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.Student&gt; extends m.RestfulData{
      data?: m.Student;
    }
*/

/**
 * 获取学生（admin可以获得任意学生，student只能获取自己）
 * @param studentId number integer 学号
 */
export function GetStudent(options: {
  studentId: number;
}): Promise<m.DataResponse<m.Student>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/${options.studentId}`,
    method: "get",
    reqName: "GetStudent"
  };

  return apiSendAsync<m.DataResponse<m.Student>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 删除某个学生
 * @param id number integer
 */
export function DeleteStudent(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/${options.id}`,
    method: "delete",
    reqName: "DeleteStudent"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Statistics[]&gt; extends m.RestfulData{
      data?: m.Statistics[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学生衣服统计列表（1代表男生，0代表女生）
 */
export function GetClothData(): Promise<m.PageResponse<m.Statistics[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/Cloth`,
    method: "get",
    reqName: "GetClothData"
  };

  return apiSendAsync<m.PageResponse<m.Statistics[]>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Statistics[]&gt; extends m.RestfulData{
      data?: m.Statistics[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学生鞋子统计列表（1代表男生，0代表女生）
 */
export function GetShoseData(): Promise<m.PageResponse<m.Statistics[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/Shose`,
    method: "get",
    reqName: "GetShoseData"
  };

  return apiSendAsync<m.PageResponse<m.Statistics[]>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Statistics[]&gt; extends m.RestfulData{
      data?: m.Statistics[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学生报到统计列表（1代表已报到，0代表未报到）
 */
export function GetComeData(): Promise<m.PageResponse<m.Statistics[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/Come`,
    method: "get",
    reqName: "GetComeData"
  };

  return apiSendAsync<m.PageResponse<m.Statistics[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新生报到确认
 * @param studentId string string
 */
export function ConfirmStudents(options: {
  studentId: string;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/Confirm/${options.studentId}`,
    method: "post",
    reqName: "ConfirmStudents"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.Student[]&gt; extends m.RestfulData{
      data?: m.Student[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取学生服装列表(role为admin获取全部，college获取本学院)
 * @param page number integer 当前页
 * @param pageSize number integer 页大小
 * @param type string string 类型（clothesSize:衣服，shoesSize鞋子）
 * @param value string string 值
 * @param collegeCode string string 学院代码(可选,role为college时无效)
 * @param majorCode string string 专业代码（可选，优先级高于学院代码，有collegeCode不起作用)
 * @param studentId string string 学号
 * @param year number integer 年份，默认当年
 */
export function GetStudentColList(options: {
  page?: number;
  pageSize?: number;
  type?: string;
  value?: string;
  collegeCode?: string;
  majorCode?: string;
  studentId?: string;
  year?: number;
}): Promise<m.PageResponse<m.Student[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/Student/colth`,
    method: "get",
    reqName: "GetStudentColList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    type: options.type,
    value: options.value,
    collegeCode: options.collegeCode,
    majorCode: options.majorCode,
    studentId: options.studentId,
    year: options.year
  };

  return apiSendAsync<m.PageResponse<m.Student[]>>(opts);
}
/*
    export interface m.PageResponse&lt;m.StudentStationView[]&gt; extends m.RestfulData{
      data?: m.StudentStationView[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取新生到站统计列表
 * @param page number integer
 * @param pageSize number integer
 * @param station string string 站点（选填，默认全部，桂林站，桂林北站，桂林西站，两江机场）
 * @param isNeed number integer 是否需要接待（选填，默认全部，0.否1.是）
 * @param time1 number integer 时间戳1抵达时间段1要小于2
 * @param time2 number integer 时间戳2抵达时间段1要小于2
 * @param year number integer 年份（选填，默认当年）
 */
export function GetStudentStationList(options: {
  page?: number;
  pageSize?: number;
  station?: string;
  isNeed?: number;
  time1?: number;
  time2?: number;
  year?: number;
}): Promise<m.PageResponse<m.StudentStationView[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/StudentStation`,
    method: "get",
    reqName: "GetStudentStationList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize,
    station: options.station,
    isNeed: options.isNeed,
    time1: options.time1,
    time2: options.time2,
    year: options.year
  };

  return apiSendAsync<m.PageResponse<m.StudentStationView[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 修改新生到站
 * @param studentStation m.StudentStation  学生到站实体
 */
export function PutStudentStation(options: {
  studentStation?: m.StudentStation;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/StudentStation`,
    method: "put",
    reqName: "PutStudentStation"
  };

  opts.data = options.studentStation;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 * 新生填写到站（第一次post新增，第二次update）
 * @param studentStation m.StudentStation
 */
export function PostStudentStation(options: {
  studentStation?: m.StudentStation;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/StudentStation`,
    method: "post",
    reqName: "PostStudentStation"
  };

  opts.data = options.studentStation;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.StudentStation&gt; extends m.RestfulData{
      data?: m.StudentStation;
    }
*/

/**
 * 获取新生到站(新生获取自己，管理员任意)
 * @param studentId number integer 学号
 */
export function GetStudentStation(options: {
  studentId: number;
}): Promise<m.DataResponse<m.StudentStation>> {
  const opts: ApiRequestOptions = {
    url: `/api/StudentStation/${options.studentId}`,
    method: "get",
    reqName: "GetStudentStation"
  };

  return apiSendAsync<m.DataResponse<m.StudentStation>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 *
 * @param id number integer
 */
export function Delete(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/StudentStation/${options.id}`,
    method: "delete",
    reqName: "Delete"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.PageResponse&lt;m.User[]&gt; extends m.RestfulData{
      data?: m.User[];
      total: number;
      page: number;
      pageSize: number;
    }
*/

/**
 * 获取用户列表
 * @param page number integer
 * @param pageSize number integer
 */
export function GetUserList(options: {
  page?: number;
  pageSize?: number;
}): Promise<m.PageResponse<m.User[]>> {
  const opts: ApiRequestOptions = {
    url: `/api/User`,
    method: "get",
    reqName: "GetUserList"
  };

  options.pageSize = options.pageSize;

  opts.params = {
    page: options.page,
    pageSize: options.pageSize
  };

  return apiSendAsync<m.PageResponse<m.User[]>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 *
 * @param value m.User
 */
export function PostUser(options: {
  value?: m.User;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/User`,
    method: "post",
    reqName: "PostUser"
  };

  opts.data = options.value;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.User&gt; extends m.RestfulData{
      data?: m.User;
    }
*/

/**
 *
 * @param id number integer
 */
export function GetUser(options: {
  id: number;
}): Promise<m.DataResponse<m.User>> {
  const opts: ApiRequestOptions = {
    url: `/api/User/${options.id}`,
    method: "get",
    reqName: "GetUser"
  };

  return apiSendAsync<m.DataResponse<m.User>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 *
 * @param value m.User
 * @param id string string
 */
export function PutUser(options: {
  value?: m.User;
  id: string;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/User/${options.id}`,
    method: "put",
    reqName: "PutUser"
  };

  opts.data = options.value;
  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
/*
    export interface m.DataResponse&lt;m.RestfulData&gt; extends m.RestfulData{
      data?: m.RestfulData;
    }
*/

/**
 *
 * @param id number integer
 */
export function DeleteUser(options: {
  id: number;
}): Promise<m.DataResponse<m.RestfulData>> {
  const opts: ApiRequestOptions = {
    url: `/api/User/${options.id}`,
    method: "delete",
    reqName: "DeleteUser"
  };

  return apiSendAsync<m.DataResponse<m.RestfulData>>(opts);
}
